########################################################
###common
########################################################
#jasypt:
#  encryptor:
#    ## 不安全 生产用 -Djasypt.encryptor.password=123456 方式
#    password: '@WSXcft6#EDCvgy7'
#app:
#  db:
#    ip: localhost
#    port: 33306
#    username: ENC(DySsEJn1LgKl6VqxdP7mTw==)
#    password: ENC(znfy5SdaY3e0hXjTpZQv1w==)
#    name: test
#  filesever:
#    host: localhost
#    path: /tmp
#    thumbPath: /tmp/testUpload/image
#  redis:
#    host: localhost
#    port: 36379
#    password: ENC(zGb6Ots9lRMd7RLIy6w12A==)
#    database: 0
#  rabbitmq:
#    ip: localhost
#    port: 5672
#    username: ENC(Esk0at/quBKVrWD6PKHwAg==)
#    password: ENC(GqHPMo3jAyV25ZAv5Zejnw==)
#    virtualHost: /
app:
  db:
    ip: localhost
    port: 33306
    username: root
    password: 123456
    name: test
  filesever:
    host: localhost
    path: /tmp
    thumbPath: /tmp/testUpload/image
  redis:
    host: localhost
    port: 36379
    password: 123456
    database: 0
  rabbitmq:
    ip: localhost
    port: 5672
    username: guest
    password: guest
    virtualHost: /
  zipkin:
    host: localhost
    port: 9411
  logstash:
    host: localhost
    port: 4560
########################################################
### static resources and upload load file
########################################################
base_assets_url: http://${app.filesever.host}/${spring.application.name}/assets/
base_assets_upload_path: ${app.filesever.path}/${spring.application.name}/upload/
base_assets_upload_url: http://${app.filesever.host}/${spring.application.name}/upload/
base_thumb_path: ${app.filesever.thumbPath}/${spring.application.name}/
########################################################
### LOG
########################################################
logging:
#  config: classpath:logback.xml
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.jdbc: INFO
    com.php25: INFO
    org.springframework.security: INFO
    com.php25.qiuqiu.monitor.dao: INFO
  file:
    name: /tmp/logs/qiuqiu-admin.log
spring:
  ########################################################
  ###datasource
  ########################################################
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${app.db.ip}:${app.db.port}/${app.db.name}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor&zipkinServiceName=mysql8
    username: ${app.db.username}
    password: ${app.db.password}
    minIdle: 1
    connectionTimeout: 30000
    idleTimeout: 300000
    maxLifetime: 1800000
    maximumPoolSize: 15
    poolName: hikariDataSource
  ########################################################
  ### redis
  ########################################################
  redis:
    host: ${app.redis.host}
    port: ${app.redis.port}
    database: ${app.redis.database}
    #password: ${app.redis.password}
    ssl: false
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: 5s
        min-idle: 0
    timeout: 5s
    connect-timeout: 5s
  ########################################################
  ### rabbitmq
  ########################################################
  rabbitmq:
    addresses: ${app.rabbitmq.ip}
    port: ${app.rabbitmq.port}
    username: ${app.rabbitmq.username}
    password: ${app.rabbitmq.password}
    virtual-host: ${app.rabbitmq.virtualHost}
  cloud:
    stream:
      bindings:
        dict_input:
          destination: dict-exchange
          contentType: application/json
          consumer:
            max-attempts: 1
        dict_output:
          destination: dict-exchange
          contentType: application/json
        ws_channel_input:
          destination: ws_channel-exchange
          contentType: application/json
          consumer:
            max-attempts: 1
        ws_channel_output:
          destination: ws_channel-exchange
          contentType: application/json
        audit_log_input:
          group: audit_log
          destination: audit_log-exchange
          contentType: application/json
          consumer:
            max-attempts: 3
            backOffInitialInterval: 2000
            backOffMaxInterval: 10000
            backOffMultiplier: 2
        audit_log_output:
          destination: audit_log-exchange
          contentType: application/json
        statistic_loaded_job_input:
          destination: statistic_loaded_job-exchange
          contentType: application/json
          consumer:
            max-attempts: 1
        statistic_loaded_job_output:
          destination: statistic_loaded_job-exchange
          contentType: application/json
        merge_statistic_loaded_job_input:
          group: merge_statistic_loaded_job
          destination: merge_statistic_loaded_job-exchange
          contentType: application/json
          consumer:
            max-attempts: 3
            backOffInitialInterval: 2000
            backOffMaxInterval: 10000
            backOffMultiplier: 2
        merge_statistic_loaded_job_output:
          destination: merge_statistic_loaded_job-exchange
          contentType: application/json
        time_job_disabled_input:
          group: time_job_disabled
          destination: time_job_disabled-exchange
          contentType: application/json
          consumer:
            max-attempts: 3
            backOffInitialInterval: 2000
            backOffMaxInterval: 10000
            backOffMultiplier: 2
        time_job_disabled_output:
          destination: time_job_disabled-exchange
          contentType: application/json
        time_job_enabled_input:
          group: time_job_enabled
          destination: time_job_enabled-exchange
          contentType: application/json
          consumer:
            max-attempts: 3
            backOffInitialInterval: 2000
            backOffMaxInterval: 10000
            backOffMultiplier: 2
        time_job_enabled_output:
          destination: time_job_enabled-exchange
          contentType: application/json
      rabbit:
        bindings:
          audit_log_input:
            consumer:
              acknowledgeMode: AUTO
              auto-bind-dlq: true
              republish-to-dlq: true
          merge_statistic_loaded_job_input:
            consumer:
              acknowledgeMode: AUTO
              auto-bind-dlq: true
              republish-to-dlq: true
          time_job_disabled_input:
            consumer:
              acknowledgeMode: AUTO
              auto-bind-dlq: true
              republish-to-dlq: true
          time_job_enabled_input:
            consumer:
              acknowledgeMode: AUTO
              auto-bind-dlq: true
              republish-to-dlq: true
  ########################################################
  ### servlet
  ########################################################
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  ########################################################
  ### 调用链
  ########################################################
  zipkin:
    base-url: http://${app.zipkin.host}:${app.zipkin.port}
    service.name: qiuqiu-admin
    sender.type: web
    enabled: true
    discovery-client-enabled: false
  sleuth:
    sampler:
      probability: 1.0
    traceId128: true
    enabled: true
########################################################
### 服务器运行时信息
########################################################
management:
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 9091
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always
server:
  port: 8081
  servlet:
    context-path: /qiuqiu_admin
  id: ${random.uuid}
ws.enable: true
########################################################
### http_client
########################################################
httpClient:
  maxIdleConnection: 10
  connectionTimeout: 5000
  readTimeout: 5000
  writeTimeout: 5000
########################################################
### logstash 集中日志
########################################################
logstash:
  ip: ${app.logstash.host}
  port: ${app.logstash.port}
